---
- hosts: all
  gather_facts: no
  become: True
  become_user: admin
  tasks:
    - name: Create a blank file
      file:
        path: /home/admin/test.txt
        state: touch
        
        
---
- name: Print hello message
hosts: all
tasks:
- debug:
msg: Hello from Ansible!


---
- name: Print hello message
hosts: all
tasks:
- debug:
    var: ansible_facts
        
 
---
- name: Print hello message
hosts: all
gather_facts: no
tasks:
- debug:
    var: ansible_facts
        


        
- name: Deploy lamp stack application
  hosts: all
  tasks:
    - name: Install common dependencies
      yum:
        name:
          - libselinux-python
          - libsemanage-python
          - firewalld
        state: installed
    
##### Ansible modules
# Packages
---
- name: Install web on CentOS
  hosts: all
  tasks:
    - yum:
        name: httpd
        state: installed

---
- hosts: web1
  tasks:
  - yum:
      name: http://mirror.centos.org/centos/7/os/x86_64/Packages/wget-1.14-18.el7_6.1.x86_64.rpm
      state: present
      
      
---
- name: Install web on Ubuntu
  hosts: all
    tasks:
        - apt:
            name: apache2
            state: installed


---
- name: Install web on Any Host
hosts: all
tasks:
- package:
name: httpd
state: installed

#Service

---
- name: Start httpd service
  hosts: all
  tasks:
    - service:
      name: httpd
      state: started
      enabled: yes


#Firewall Rules

---
- name: Add Firewalld rule
  hosts: all
  tasks:
    - firewalld:
        port: 8080/tcp
        service: http
        source: 192.0.0.0/24
        zone: public
        state: enabled
        permanent: yes
        immediate: yes


#Storage


---
- hosts: all
tasks:
- name: Create LVM Volume Group
lvg:
vg: vg1
pvs: /dev/sdb1,/dev/sdb2
playbook
- name: Create LVM Volume
lvol:
vg: vg1
lv: lvol1

#Filesystem
---
- hosts: all
tasks:
- name: Create Filesystem
filesystem:
fstype: ext4
dev: /dev/vg1/lvol1
playbook
opts: -cc
- name: Mount Filesystem
mount:
fstype: ext4
src: /dev/vg1/lvol1
path: /opt/app
state: mounted

#File
---
- hosts: all
tasks:
- name: Create Directory
file:
path: /opt/app/web
state: directory
playbook
- name: Create File
file:
path: /opt/app/web/index.html
state: touch
owner: app-owner
group: app-owner
mode: ’0644’

#Archive
---
- hosts: all
tasks:
- name: Compress a folder
archive:
path: /opt/app/web
dest: /tmp/web.gz
playbook
format: zip|tar|bz2|xz|gz
- name: Uncompress a folder
unarchive:
src: /tmp/web.gz
dest: /opt/app/web
remote_src: yes


#Cron
---
- hosts: all
tasks:
- name: Create a scheduled task
cron:
name: Run daily health report
job: sh /opt/scripts/health.sh
playbook
month: 2
day: 19
hour: 8
minute: 10


---
- hosts: all
tasks:
- name: Create a scheduled task
cron:
name: Run daily health report
job: sh /opt/scripts/health.sh
playbook
month: 2
day: 19
hour: 8
minute: 10
10 8 19 2
minute hour day month
1
weekday
weekday: 1


#Users and Groups

---
- hosts: all
tasks:
- name: Create a user Maria
user:
name: maria
playbook
uid: 1001
group: developers
shell: /bin/bash
- name: Create a group
group:
name: developers

---
- hosts: all
tasks:
- name: Configure ssh keys
authorized_keys:
user: maria
state: present
key: |
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAA
BAQC4WKn4K2G3iWg9HdCGo34gh+……root@97a1b9c3a



# Become Super User
#Become Method – sudo (pfexec, doas,ksu, runas)
#inventory
#lamp-dev1 ansible_host=172.20.1.100 ansible_user=admin

#Configuration File
become = True
become_method = doas
become_user = nginx
---
- name: Install nginx
hosts: all
tasks:
- yum:
name: nginx
state: latest

---
- name: Install nginx
hosts: all
become: yes
become_method: doas
tasks:
- yum:
name: nginx
state: latest


---
- name: Install nginx
hosts: all
become: yes
become_user: nginx
tasks:
- yum:
name: nginx
state: latest

#******************************************************************
#******************************************************************

---
- name: nginx installation and configuration
  hosts: web1
  tasks:
    - name: Install nginx 
      yum:
        name: nginx
        state: installed

    - name: Start nginx service
      service:
        name: nginx
        state: started
        enabled: yes

---
- name: Start httpd service
  hosts: web1
  tasks:
    - name: Reload http service
      service:
        name: httpd
        state: reloaded
        enabled: yes




---
- hosts: all
  gather_facts: no
  tasks:
    - name: Make changes in Apache config
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: "^Listen 80"
        replace: "Listen 443"
        
    - name: Restart Apache service
      service:
        name: httpd
        state: restarted
      
        
---
- hosts: all
  gather_facts: no
  tasks:
    - name: Copy Apache welcome file
      copy:
        src: index.html
        dest: /var/www/html/index.html
        
    - name: Reload http service
      service:
        name: httpd
        state: reloaded
        
        
        
---
- name: Start httpd service
  hosts: web1
  tasks:
    - service:
        name: httpd
        state: started
        
        
---
- hosts: web1
  gather_facts: no
  tasks:
    - name: Copy Apache welcome file
      copy:
        src: index.html
        dest: /var/www/html/index.html
        
    - name: Reload http service
      service:
        name: httpd
        state: reloaded
        
        
        
---
- name: Install and start the firewall service
  hosts: web1
  tasks:
    - yum:
        name: firewalld
        state: installed
        
    - service:
        name: firewalld
        state: started
        enabled: yes
                
        

---
- name: Whitelist IP 
  hosts: web1
  tasks:
    - firewalld:
        source: 172.20.1.101
        zone: internal
        state: enabled
        permanent: yes
        immediate: yes


---
- name: block 161/udp port
  hosts: web1
  tasks:
    - firewalld:
        port: 161/udp
        zone: block
        state: enabled
        permanent: yes
        immediate: yes  
        
        
---
- name: Add Firewalld rule
  hosts: all
  tasks:
    - firewalld:
        service: https
        source: 172.20.1.2
        zone: internal
        state: enabled
        permanent: yes
        immediate: yes        


---
- hosts: web2
  tasks:
    - name: Install httpd package
      yum:
        name: httpd, firewalld
        state: installed

    - name: Start/enable http services
      service:
        name: httpd 
        state: started
        enabled: yes
        
    - name: Start/enable firewalld services
      service:
        name: firewalld 
        state: started
        enabled: yes
        
    - name: Change Apache port
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: "Listen 80"
        replace: "Listen 8082"

    - name: Restart Apache service
      service:
        name: httpd
        state: restarted
        
    - firewalld:
        port: 8082/tcp
        zone: public
        state: enabled
        permanent: yes
        immediate: yes 
        


---
- name: Create file perm.txt
  hosts: web1
  tasks:
    - name: create a blank file
      file:
        path: /opt/data/perm.txt
        state: touch
        mode: '0640'


---
- name: Create index.html on web1
  hosts: web1
  tasks:
  - lineinfile:
      path: /var/www/html/index.html
      line: 'This line was added using Ansible lineinfile module!'
      create: yes


     
---
- hosts: web1
  tasks:
    - name: Find files
      find:
        paths: /opt/data
        age: 2m
        size: 1m
        recurse: yes
      register: file

    - name: Copy files
      command: "cp {{ item.path }} /opt"
      with_items: "{{ file.files }}"


---
- name: Create index.html on web1 using blockinfile
  hosts: web1
  tasks:
   - blockinfile:
      path: /var/www/html/index.html
      insertbefore: BOF
      block: |
       Welcome to KodeKloud!
       This is Ansible Lab.
      create: yes
      owner: apache
      group: apache
      
      
      
---
- hosts: web1
  tasks:
    - name: Change Apache port
      replace:
        path: /etc/httpd/conf/httpd.conf
        regexp: "Listen 80"
        replace: "Listen 8082"

    - name: Restart Apache service
      service:
        name: httpd
        state: restarted
        

---
- hosts: web1
  tasks:
   - name: make a zip archive
     archive:
        path: /opt
        dest: /root/opt.zip
        format: zip
        
        
---
- hosts: web1
  tasks:
   - name: extract a zip archive
     unarchive:
        src: local.zip
        dest: /tmp

---
- hosts: web1
  tasks:
   - name: extract a zip archive
     unarchive:
        src: /root/data.tar.gz
        dest: /srv
        remote_src: yes
        
   - name: Delete the src file 
     file: 
      path: /root/data.tar.gz 
      state: absent
      
      
---
- hosts: web1
  tasks:
   - name: Download and extract a zip archive
     unarchive:
        src: https://github.com/kodekloudhub/Hello-World/archive/master.zip
        dest: /root
        remote_src: yes
        

---
- hosts: web1
  tasks:
   - name: make a archive
     archive:
        path:
         - /root/file1.txt
         - /usr/local/share/file2.txt
         - /var/log/lastlog
        dest: /root/files.tar.bz2
        format: bz2
        


---
- name: nginx installation and configuration
  hosts: web1
  tasks:
    - name: Install nginx 
      yum:
        name: nginx
        state: installed

    - name: Start nginx service
      service:
        name: nginx
        state: started
        enabled: yes

    - name: extract a nginx zip archive
      unarchive:
        src: /root/nginx.zip
        dest: /usr/share/nginx/html
        remote_src: yes

    - name: Change content in index.html
      replace:
        path: /usr/share/nginx/html/index.html
        regexp: "This is sample html code"
        replace: "This is KodeKloud Ansible lab"

 ---
- hosts: all
  tasks:
    - name: Create a group admin
      group:
        name: admin
        state: present
        
    - name: Create a user admin
      user:
        name: admin
        uid: 2048
        group: admin
       
---
- hosts: all
  tasks:     
    - name: Create a user admin
      user:
        name: neymarsabin
        expires: 1704067199


---
- hosts: all
  tasks:
    - name: Remove user admin
      user:
        name: admin
        state: absent
        remove: yes

#Cron
---
- name: Create a cron job to clear last log
  hosts: node00
  tasks:
    - name:  Create cron job
      cron:
        name: Run daily health report
        job: echo "" > /var/log/lastlog
        hour: 0
        minute: 0


---
- name: Create a cron job to run free.sh script
  hosts: node00
  tasks:
   - name: Create cron job
     cron:
       name: "Free Memory Check"
       minute: "0"
       hour: "*/2"
       job: "sh /root/free.sh"
       
---
- name: remove cron job from node00
  hosts: node00
  tasks:
  - name: Remove cron job
    cron:
      name: "Check Memory"
      state: absent
      
---
- name: Cleanup /tmp after every reboot
  hosts: node00
  tasks:
   - cron:
      name: cleanup
      job: rm -rf /tmp/*
      special_time: reboot
      
---
- name: Create cron for yum
  hosts: node00
  gather_facts: no
  tasks:
    - name: Creates a cron
      cron:
        name: yum update
        weekday: 0
        minute: 5
        hour: 8
        user: root
        job: "yum -y update"
        cron_file: ansible_yum
        
#******************************************************************
#******************************************************************

https://github.com/kodekloudhub/learning-app-ecommerce  


